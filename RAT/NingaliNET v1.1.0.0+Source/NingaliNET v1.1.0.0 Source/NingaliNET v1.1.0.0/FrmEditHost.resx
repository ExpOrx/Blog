<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDpENDYzNUI3Nzk0N0YxMUU1QTdGRDlEQzZDNDM1QjAwNCIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDpENDYzNUI3ODk0N0YxMUU1QTdGRDlEQzZDNDM1QjAwNCI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkQ0NjM1Qjc1OTQ3RjExRTVBN0ZEOURDNkM0MzVC
        MDA0IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkQ0NjM1Qjc2OTQ3RjExRTVBN0ZEOURDNkM0MzVC
        MDA0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQg
        ZW5kPSJyIj8+ua0HHgAABEpJREFUOE+F1AlM01ccB/BnnLrBDrUiFBJCiJg4k3UM2YQ1OgbCRBDGVshM
        HARlcsjpQKnlWoID54YHRoIITO6jBQrlLFJgjJsC4xaiFBAUkBulkH33SghJLYu/5Jf8k/d7n/zye+/9
        CYD1lMvlZGpqSiVHRkfI+PgzMjExQWQyGZmcnFSpmZmZ2XQ2P6qrq4mOjs5mMplMwmAwiL3dacOcnLws
        YaHo0fnznme0tJhEU1NTqZbNZpO1tTVlsLS0lLwZLs4/eoirWxZv8nvR2/8Ao4N/IjCIl6j+/h6NjZL1
        0NPTI6urq8qgSCRaX9zH2Kv+nYP9KQFfUNkzNI78ehl4KR3o67sNzPlgfvQeioTpTzlOzt6Mfdpaij36
        +vqqHfb3D2impKYLauulT1p7n6F5YAqtQ9MobBrGtewu9PUnAlNcYOwSMHIV04NJqJNkTsfeiam0tPyG
        tbS0pAzKXy9/2dzzAvHiYSSUD0BIoeJmGZLF/QhKbkN3bzIFwynGA54EAo99gUFfPO+Ox0/uvhfn5uaU
        wcX52ePC6j5E8rtwQ9COWwX/IDKrDYFJ9XC8LkFHB+3weQiF/IFuD0DqBtRyMFYbDjcPPz8VcH725fFc
        cRe4qVIEJNTh3K0qOEaXwzy0CHoeAtQVegMtJ4BqM0BsAZRZAoVsjD26TEH/LcEvsss74J/Uggt3JTgZ
        UQxd9yy888NDEIcUSNKdgAY28NfXFLUCqmyBSkvIJKE4d8HHUwUcGxk2yBA1yd3iOnEysgpqzrkgtmkg
        9hkgdrn4m38G6KRgO8WkFGv9luYpDNT8iu+dXBwXFhaUwYb6JnVBfuZoTct95JfEIzkzCvcT/ZCQ6IOE
        B97wDAnCWW4YLkZew5UbfyDs5m2ExcQiJS39XwsLi8+Xl5eVwQJhEYmO+kWAqTB6ksHAcBAdvg3t6hjQ
        ZoKvPKOx3ZFP5ymE0c8VOHKpEha8BkTHJA5/fOjghysrK8pgXp6AHDU1c5geSgWG6JV4TOFOF3oQFG2w
        gHXAb9B2y8NRrgjm4RVgBZSCmySFq/PZu0xtpupLKSkpIdu2bd+ZnZHYiVF6PfrpXevxozOjs2s6Cbsr
        MTjgV4xjERUwDSmHaXAVMgtqXmsw9rC2fHplZWXrT8+UbX56fDCPXl76Inop2ulKQWs4ht7B4ctisCPE
        OES7u57dDV8v93uKPQYGBv8PKuIqLyxZ/iIXeEo77fKkp+kAl6gEGIZIYBgshmtsO9LSsofee3eXpqL+
        raCa2gcfpaamSNdmRcBEDJ0pD8EPC3Hidync43sgLK1dOnhA32yj/O2gIvbvZ+plZKR3vpprABZzkNHQ
        hTjJNPgFFQuffnKYs1G2HluCikN5M3bs2KXh5eUTV1rMf1kgKnnF5fKqGHt3szeWN0NXV1cVbGxsJCYm
        JkppbGxMWCwWsbKyNrC1sTnymaHhTiMjI5U6Doez8T8E+Q+Gm50cwSLIqAAAAABJRU5ErkJggg==
</value>
  </data>
</root>