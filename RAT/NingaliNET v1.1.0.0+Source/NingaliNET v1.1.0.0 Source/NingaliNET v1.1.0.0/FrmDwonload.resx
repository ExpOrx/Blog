<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3UAAAN1AHvkboVAAAAAmJL
        R0QAAKqNIzIAAAAHdElNRQfgCxMHAATtzqreAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE2LTExLTE5VDA3
        OjAwOjA0KzAxOjAw0VA+4gAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNi0xMS0xOVQwNzowMDowNCswMTow
        MKANhl4AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAADYklEQVR4Xu2bO2/UQBSF
        Q/gTNHRBQgpIKZASCBQ0NDRUNFQUNBEFggY6OvKuoKIDCpQK0VGFn5A/AeIhIV5C4Tl8x3M2bEgCtteO
        x9J80lHWd3zv3HuSXUX2eux/hBCm0VP0EnXFL3TXLe0fbDqHfqgDUBPvO9BXNOCyW2sfNptEm0gNrKAj
        XtpX2PcmEvoF/ESXvNQubLSsXeGhQ53A/gMD1pBM0F/kRS+3B5usIzHrUCew/8AA/byCZMJ3dMGntAMb
        bCBxyKFOYP8tA3x8NR4Wb83zxUltQPEkDRC8vh5DxWfUOYebhcLJGiA4vhXD4Qs663BzUDRpAwSx23Ep
        fEZnHG4GCiZvgCB+Jy6Hj2jG4dGhWC8MEKytxlOKf5xOODwaFOqNAYL1e/G08A5NOVwfivTNgAPofnFm
        CG/RMS/VgwK9MkBwzjh6UJwdwit01EvVIbl3BgjOO4geFxkhvEATXqoGiakZoPf4TEnNoudIvEHHXa48
        JKViwI3Yxkhsulx5SErFgMNI7+snNfQMidcuVx6SkjBgFNR7HCFsOFQeJcXcbEA2wKHeod7jCNmAbIBD
        5VFSzG3PAGrrQueaDxtHvWsASNYAXdKq/k9KSdS7BoBsgEPlUVLMzQZkAxxqHGpnAyQfNo561wCQDXCo
        PEqKudmAbIBDjUPtbIDkw8ZR7xoAsgEOlUdJMbeeAeTpGv01tOcNCtb+aQBrU64x7lAlyOvUgImYHj6g
        aYe3QXxPA4ifRp+QqHVtn7xu3wLkzscShQk77twS29UAYsPDzztcGXK7/wwgfyGWKUw46XABxzsM4Hh4
        +AWHa0F+Gh+C1FiMpYp7+Fsm8HqbAbweHn7R4dpQIw0DBHWWYrnChFOObRnAz+HhlxQbFeqkY4Cg1rAJ
        un9XGIAaH15QKy0DBPUGX8DUwN+swfDLPq0RqJeeAYKa+urt36x4uTGomaYBgrqD7/WIVYcbhbrpGiCo
        /UjyYeOodw0AaRrQNuo9jpANyAY4VB4lxdxsQDbAod6h3uMI2YBsgEPlUVLMzQZkAxzqHeo9jlDPgCQe
        mxsF9R5HCOsOlYekJB6cHAX1HkeocZ2BpCQena2DenXP6l0zTHqpGiSm8PB0HalXod7nPE49KJDC4/NV
        Ua/qedcbMn8YG/sNY0/Yyo/s3MgAAAAASUVORK5CYII=
</value>
  </data>
</root>